{"version":3,"sources":["webpack://js_project_skeleton/./src/scripts/canvas.js","webpack://js_project_skeleton/./src/scripts/bird.js","webpack://js_project_skeleton/./src/scripts/projectile.js","webpack://js_project_skeleton/./src/scripts/pig.js","webpack://js_project_skeleton/./src/scripts/block.js","webpack://js_project_skeleton/./src/scripts/stageLoader.js","webpack://js_project_skeleton/./src/index.js"],"names":["this","canvas","document","createElement","width","window","innerWidth","height","ctx","getContext","body","append","classList","add","clearRect","x","y","velX","velY","radius","color","_ctx","_radius","_color","_gravity","_ground","_bounce","fillStyle","beginPath","arc","Math","PI","closePath","fill","abs","drawBird","updateBird","Projectile","cont","launch","bind","target","random","birdObjects","max","currentBird","angle","objLaunch","ObjectLaunch","Bird","push","sin","cos","transfer","pigs","blocks","length","remove","splice","i","_x","_y","type","updateObject","drawObjectLaunch","launchLoop","removed","_frictionX","_mass","sqrt","birdOnPigCollisionLogic","j","circleCenter","checkBirdInterceptBlock","getPoint","birdOnBlockCollisionLogic","pig","block","pointA","pointB","vel1X","pos","vel1Y","unit","checkBirdOnPigCollision","checkBirdOnBlockCollision","updatePig","drawPig","w","h","r","dx","dy","dr","INSET","PI90","PI2","WALL_NORMS","mass","getMass","save","setTransform","updateBlock","drawBlock","restore","p","doCollision","rotate","fillRect","strokeRect","which","velocityA","velocityT","velocity","xx","yy","details","asPolar","vector","polar","mag","dir","vectorAdd","validatePolar","vec","isPolar","pVec","retV","isCart","cartToPolar","undefined","polarToCart","atan2","hypot","vec1","vec2","v1","asCart","v2","force","loc","l","toCenter","pheta","Fv","Fa","accel","deltaV","accelA","v","d1","d2","along","tangent","pointDetails","wallIndex","vv","va","vvc","vectorComponentsForDir","vac","applyForce","numberOfPigs","pigsLocationArray","numberofBlocks","blockLocationArray","Pig","Block","drawPigs","animate","drawBlocks","currentStateObj","currentExample","currentEventListeners","querySelector","addEventListener","pop","selector","event","handler","removeEventListener","console","log","unregisterEventListeners","Canvas","createCanvas","projectile","stageLoader","StageLoader","requestAnimationFrame","animation","clearCanvas","img","Image","src","drawImage"],"mappings":"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","file":"main.js","sourcesContent":["class Canvas {\n    constructor() {\n        this.canvas = document.createElement(\"canvas\");\n        this.canvas.width = window.innerWidth - 400;\n        this.canvas.height = this.canvas.width / 2;\n        this.ctx = this.canvas.getContext(\"2d\");\n    }\n    createCanvas() {\n        document.body.append(this.canvas);\n        this.canvas.classList.add(\"main-canvas\")\n    }\n\n    clearCanvas() {\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n}\n\nexport default Canvas;\n","class Bird {\n    constructor(ctx, x = 100, y = 100, velX = 0, velY = 0, radius = 14, color = \"RED\") {\n        this._ctx = ctx;\n        this.x = x;\n        this.y = y;\n        this.velX = velX;\n        this.velY = velY;\n        this._radius = radius;\n        this._color = color;\n\n        this._gravity = { x: 0, y: 0.1 };\n        this._ground = this._ctx.canvas.height;\n        this._bounce = 1.3;\n    }\n\n    drawBird(ctx, x, y) {\n        ctx.fillStyle = this._color;\n        ctx.beginPath();\n        ctx.arc(x, y, this._radius, 0, (Math.PI * 2), false);\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    updateBird() {\n        this.velX += this._gravity.x;\n        this.velY += this._gravity.y;\n        this.x += this.velX;\n        this.y += this.velY;\n\n        if (this.y >= this._ground) {\n            this.y = this._ground - (this.y - this._ground);\n            this.velY = -Math.abs(this.velY) * this._bounce;\n            if (this.velY >= this._gravity.y) {\n                this.velY = 0;\n                this.y = this._ground - this._gravity.y;\n            }\n        }\n    }\n\n    animate(ctx) {\n        this.drawBird(ctx);\n        this.updateBird();\n    }\n}\n\nexport default Bird;","import Bird from \"./bird\";\n\nclass Projectile {\n    constructor(ctx) {\n        this._ctx = ctx;\n        this.cont = false;\n\n        this.launch = this.launch.bind(this)\n        this.target = Math.random()*700+20;\n        this.birdObjects = [];\n        this.max = 1;\n        this.currentBird;\n    }\n\n    launch() {\n        let angle = Math.PI* 40.0 /180;\n        let magnitude = 20.0;\n\n        const objLaunch = new ObjectLaunch(this._ctx, 100, 600, new Bird(this._ctx));\n        this.birdObjects.push(objLaunch);\n        objLaunch.velY =- magnitude * Math.sin(angle);\n        objLaunch.velX = magnitude * Math.cos(angle);\n        objLaunch.transfer = 0.8;\n    }\n\n    launchLoop(ctx, pigs, blocks) {\n        if (this.birdObjects.length > this.max) {\n            this.birdObjects[0].remove();\n            this.birdObjects = this.birdObjects.splice(1);\n        }\n        if (this.cont) {\n            this.launch()\n        }\n        for (let i = 0; i < this.birdObjects.length; i++) {\n            let currentBird = this.birdObjects[i]\n            // if (this.currentBird._y + this.currentBird.type.radius >= 700) {\n            //     if (this.bounce) {\n            //         this.currentBird.velY *= this.currentBird.transfer;\n            //     } else {\n            //         this.currentBird.velX = 0;\n            //         this.currentBird.velY = 0;\n            //     }\n            // }\n            currentBird.velY += 1.53;\n            currentBird._x += currentBird.velX / 3;\n            currentBird._y += currentBird.velY / 3;\n            if (currentBird._y + currentBird.type.radius > 700) {\n                currentBird._y = 700 - currentBird.type.radius;\n            }\n            currentBird.updateObject(pigs, blocks)\n            currentBird.drawObjectLaunch(this._ctx);\n        }\n    }\n\n    animate(ctx, pigs, blocks) {\n        this.launchLoop(ctx, pigs, blocks);\n    }\n}\n\nclass ObjectLaunch {\n    constructor(ctx, x = 50, y = 50, type) {\n        this._ctx = ctx;\n        this._x = x;\n        this._y = y;\n        this.velX = 0;\n        this.velY = 0;\n        this.type = type;\n        this.transfer = 0.9;\n        this.removed = false;\n        this._gravity = { x: 0, y: 0.1 };\n        this._ground = this._ctx.canvas.height - 20;\n        this._bounce = 0.5;\n        this._frictionX = 0.9;\n        this._mass = 2;\n        this.radius = 14;\n    }\n\n    remove() {\n        this.removed = true;\n    }\n\n    drawObjectLaunch(ctx) {\n        this.type.drawBird(ctx, this._x, this._y)\n    }\n\n    checkBirdOnPigCollision(pigs) {\n        if (pigs) {\n            for (let i = 0; i < pigs.length; i++) {\n                if (this._x + this.type._radius + pigs[i]._radius > pigs[i].x\n                    && this._x < pigs[i].x + this.type._radius + pigs[i]._radius\n                    && this._y + this.type._radius + pigs[i]._radius > pigs[i].y\n                    && this._y < pigs[i].y + this.type._radius + pigs[i]._radius) \n                {\n                    // pythagoream theorem to be more exact on collision\n                    let distance = Math.sqrt(\n                          ((this._x - pigs[i].x) * (this._x - pigs[i].x))\n                        + ((this._y - pigs[i].y) * (this._y - pigs[i].y))\n                    )\n\n                    if (distance < this.type._radius + pigs[i]._radius) {\n                        this.birdOnPigCollisionLogic(pigs[i])\n                    }\n                }\n            }\n        }\n    }\n\n    checkBirdOnBlockCollision(blocks) {\n        if (blocks) {\n            for (let i = 0; i < blocks.length; i++) {\n                for (let j = 0; j < 4; j++){\n                    const circleCenter = [this._x, this._y];\n                    if (j + 1 === 4) {\n                        if (this.checkBirdInterceptBlock(blocks[i].getPoint(j), blocks[i].getPoint(0), circleCenter, this.radius)) {\n                            this.birdOnBlockCollisionLogic(blocks[i])\n                        }\n                    } else {\n                        if (this.checkBirdInterceptBlock(blocks[i].getPoint(j), blocks[i].getPoint(j + 1), circleCenter, this.radius)) {\n                            this.birdOnBlockCollisionLogic(blocks[i])\n                        }\n                    }\n                }\n                // if (checkBirdInterceptBlock(blocks[i]))\n            }\n        }\n    }\n\n    birdOnPigCollisionLogic(pig) {\n        const mass1 = this.type._radius;\n        const mass2 = pig._radius;\n        if (pig.velX === 0) pig.velX = 9;\n        // if (pig.velY === 0) pig.velY = 6;\n        // const pigVelX = pig.velX;\n        // const pigVelY = pig.velY;\n\n        this.velX = -this.velX;\n        this.velY = -this.velY;\n\n        pig.velX = -pig.velX;\n        pig.velY = -pig.velY;\n        \n        // this.velX = ( this.velX * (mass1 - mass2) + (2 * mass2 * pigVelX)) / (mass1 + mass2);\n        // this.velY = ( this.velY * (mass1 - mass2) + (2 * mass2 * pigVelY)) / (mass1 + mass2);\n        // pig.velX = ( pigVelX * (mass2 - mass1) + (2 * mass1 * this.velX)) / (mass1 + mass2);\n        // pig.velY = ( pigVelY * (mass2 - mass1) + (2 * mass1 * this.velY)) / (mass1 + mass2);\n        \n        this._x += this.velX;\n        this._y += this.velY;\n        pig.x += pig.velX;\n        pig.y += pig.velY;\n    }\n\n    birdOnBlockCollisionLogic(block) {\n        this.velX = -this.velX;\n        this.velY = -this.velY;\n\n        this._x += this.velX;\n        this._y += this.velY;\n    }\n\n    checkBirdInterceptBlock(pointA, pointB, circleCenter, radius) {\n        let dist;\n        const vel1X = pointB.pos.x - pointA.pos.x;\n        const vel1Y = pointB.pos.y - pointA.pos.y;\n        const vel2X = circleCenter[0] - pointA.pos.x;\n        const vel2Y = circleCenter[1] - pointA.pos.y;\n        const unit = (vel2X * vel1X + vel2Y * vel1Y) / (vel1Y * vel1Y + vel1X * vel1X);\n        if (unit >= 0 && unit <= 1){\n            dist = (pointA.pos.x  + vel1X * unit - circleCenter[0]) ** 2 + (pointA.pos.y + vel1Y * unit - circleCenter[1]) ** 2;\n        } else {\n            dist = unit < 0 ? \n                (pointA.pos.x - circleCenter[0]) ** 2 + (pointA.pos.y - circleCenter[1]) ** 2 :\n                (pointB.pos.x - circleCenter[0]) ** 2 + (pointB.pos.y - circleCenter[1]) ** 2;\n        }\n        return dist < radius * radius;\n    }\n\n    updateObject(pigs, blocks) {\n        this.checkBirdOnPigCollision(pigs)\n        this.checkBirdOnBlockCollision(blocks)\n        this.velX += this._gravity.x;\n        this.velY += this._gravity.y;\n        this._x += this.velX;\n        this._y += this.velY;\n\n        if (this._y >= this._ground) {\n            this._y = this._ground - (this._y - this._ground);\n            this.velY = -Math.abs(this.velY) * this._bounce;\n            if (this.velY >= this._gravity.y) {\n                this.velY = 0;\n                this._y = this._ground - this._gravity.y;\n            }\n            if (this.velX > 0) {\n                this.velX -= this._frictionX;\n            }\n            if (this.velX < 0) {\n                this.velX += this._frictionX;\n            }\n        }\n        // stops ball from bouncing in Y axis\n        if ( this._y >= this._ground - 10) {\n            if (this.velY < 0 && this.velY > -1.1) {\n                this.velY = 0;\n            }\n        }\n        // stops ball from moving on X axis if x-velocity < 1.1\n        if (Math.abs(this.velX) < 1.1) {\n            this.velX = 0;\n        }\n    }\n}\n\n\nexport default Projectile;","class Pig {\n    constructor(ctx, x, y, velX = 0, velY = 0, radius = 15, color = \"ORANGE\") {\n        this._ctx = ctx;\n        this.x = x;\n        this.y = y;\n        this.velX = velX;\n        this.velY = velY;\n        this._radius = radius;\n        this._mass = 2;\n        this._color = color;\n\n        this._gravity = { x: 0, y: 0.1 };\n        this._ground = this._ctx.canvas.height - 20;\n        this._bounce = 0.4;\n        this._frictionX = 0.9;\n        this._mass = 2;\n    }\n\n    drawPig(ctx) {\n        ctx.fillStyle = this._color;\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this._radius, 0, (Math.PI * 2), false);\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    updatePig() {\n        this.velX += this._gravity.x;\n        this.velY += this._gravity.y;\n        this.x += this.velX;\n        this.y += this.velY;\n\n        if (this.y >= this._ground) {\n            this.y = this._ground - (this.y - this._ground);\n            this.velY = -Math.abs(this.velY) * this._bounce;\n            if (this.velY >= this._gravity.y) {\n                this.velY = 0;\n                this.y = this._ground - this._gravity.y;\n            }\n            if (this.velX > 0) {\n                this.velX -= this._frictionX;\n            }\n            if (this.velX < 0) {\n                this.velX += this._frictionX;\n            }\n        }\n        // stops ball from bouncing in Y axis\n        if (this.velY<0 && this.velY>-2.1) {\n            this.velY = 0;\n        }\n        // stops ball from moving on X axis if x-velocity < 1.1\n        if (Math.abs(this.velX) < 1.1) {\n            this.velX = 0;\n        }\n    }\n\n    animate(ctx) {\n        this.updatePig();\n        this.drawPig(ctx);\n    }\n}\n\n\nexport default Pig;","class Block {\n    constructor(ctx, x, y, w = 40, h = 100) {\n        this._ctx = ctx;\n        this.x = x;\n        this.y = y;\n        this.w = w;\n        this.h = h;\n        this.r = 0.1;\n        this.dx = 0;\n        this.dy = 0;\n        this.dr = 0;\n        this.INSET = 10;\n        this.PI = Math.PI;\n        this.PI90 = Math.PI / 2;\n        this.PI2 = Math.PI * 2;\n        this.WALL_NORMS = [ Math.PI / 2, Math.PI, -(Math.PI / 2), 0]\n        this._ground = this._ctx.canvas.height - 105;\n        this.mass = this.getMass()\n    }\n\n    animate(ctx) {\n        ctx.save()\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        this.updateBlock();\n        this.drawBlock(ctx);\n        ctx.restore()\n\n        for(let i = 0; i < 4; i++){\n            var p = this.getPoint(i);\n            // only do one collision per frame or we will end up adding energy\n            if(p.pos.x < this.INSET){\n                this.x += (this.INSET) - p.pos.x;\n                this.doCollision(p,3)\n            }\n            else if( p.pos.x > ctx.canvas.width-this.INSET){\n                this.x += (ctx.canvas.width - this.INSET) - p.pos.x;\n                this.doCollision(p,1)\n            }\n            else if(p.pos.y < this.INSET){\n                this.y += (this.INSET) - p.pos.y;\n                this.doCollision(p,0)\n            }\n            else if( p.pos.y > ctx.canvas.height - this.INSET){\n                this.y += (ctx.canvas.height - this.INSET) - p.pos.y;\n                this.doCollision(p,2)\n            }\n        }\n    }\n\n    getMass() {\n        return ( this.w * this.h * this.h) / 1000;\n    }\n\n    drawBlock(ctx) {\n        ctx.setTransform(1,0,0,1,this.x,this.y);\n        ctx.rotate(this.r);\n        ctx.fillStyle = \"Blue\";\n        ctx.fillRect(-this.w/2, -this.h/2, this.w, this.h)\n        ctx.strokeRect(-this.w/2, -this.h/2, this.w, this.h)\n    }\n\n    updateBlock() {\n        this.x += this.dx;\n        this.y += this.dy;\n        this.dy += 0.061;\n        this.r += this.dr;\n\n        // if (this.y >= this._ground) {\n        //     this.y = this._ground \n        // }\n    }\n\n    getPoint(which) {\n        var dx, dy, x, y, xx, yy, velocityA, velocityT, velocity;\n\n        dx = Math.cos(this.r);\n        dy = Math.sin(this.r);\n\n        switch (which) {\n            case 0:\n                x = -this.w / 2;\n                y = -this.h / 2;\n                break;\n            case 1:\n                x = this.w / 2;\n                y = -this.h / 2;\n                break;\n            case 2:\n                x = this.w / 2;\n                y = this.h / 2;\n                break;\n            case 3:\n                x = -this.w / 2;\n                y = this.h / 2;\n                break;\n            case 4:\n                x = this.x;\n                y = this.y;\n        }\n\n        var xx , yy;\n        xx = x * dx + y * -dy;\n        yy = x * dy + y * dx;\n\n        var details = this.asPolar(this.vector(xx, yy));\n\n        xx += this.x;\n        yy += this.y;\n\n        velocityA = this.polar(details.mag * this.dr, details.dir + this.PI90);\n        velocityT = this.vectorAdd(velocity = this.vector(this.dx, this.dy), velocityA);\n\n        return {\n            velocity: velocity,\n            velocityT: velocityT,\n            velocityA : velocityA,\n            pos: this.vector(xx, yy),\n            radius: details.mag\n        }\n    }\n\n    polar(mag = 1, dir = 0) {\n        return this.validatePolar({dir: dir, mag: mag})\n    }\n\n    vector(x = 1, y = 0) {\n        return { x: x, y: y};\n    }\n\n    validatePolar(vec) {\n        if (this.isPolar(vec)) {\n            if(vec.mag < 0){\n                vec.mag = -vec.mag;\n                vec.dir += this.PI;\n            }\n        }\n        return vec;\n    }\n\n    polarToCart(pVec, retV = {x: 0, y: 0}){\n        retV.x = Math.cos(pVec.dir) * pVec.mag;\n        retV.y = Math.sin(pVec.dir) * pVec.mag;\n        return retV\n    }\n\n    asPolar(vec) {\n        if (this.isCart(vec)) {\n            return this.cartToPolar(vec)\n        }\n        if (vec.mag < 0) {\n            vec.mag = -vec.mag;\n            vec.dir += this.PI;\n        }\n        return { dir: vec.dir, mag: vec.mag};\n    }\n\n    isCart(vec) { if(vec.x !== undefined && vec.y !== undefined) { return true; } return false; }\n    isPolar(vec) { if(vec.mag !== undefined && vec.dir !== undefined) { return true; } return false; }\n    asCart(vec) {\n        if (this.isPolar(vec)) {return this.polarToCart(vec)}\n        return {x: vec.x, y: vec.y}\n    }\n    cartToPolar(vec, retV = {dir: 0, mag: 0}) {\n        retV.dir = Math.atan2(vec.y, vec.x);\n        retV.mag = Math.hypot(vec.x, vec.y);\n        return retV;\n    }\n\n    vectorAdd(vec1, vec2) {\n        var v1 = this.asCart(vec1);\n        var v2 = this.asCart(vec2);\n        return this.vector(v1.x + v2.x, v1.y + v2.y)\n    }\n\n    applyForce(force, loc) {\n        this.validatePolar(force);\n        var l = this.asCart(loc);\n        var toCenter = this.asPolar(this.vector(this.x - l.x, this.y - l.y));\n        var pheta = toCenter.dir - force.dir;\n        var Fv = Math.cos(pheta) * force.mag;\n        var Fa = Math.sin(pheta) * force.mag;\n        var accel = this.asPolar(toCenter);\n        accel.mag = Fv / this.mass; \n        var deltaV = this.asCart(accel); \n        this.dx += deltaV.x \n        this.dy += deltaV.y\n        var accelA = Fa / (toCenter.mag  * this.mass); \n        this.dr += accelA;\n    }\n\n    vectorComponentsForDir(vec, dir) {\n        var v = this.asPolar(vec); \n        var pheta = v.dir - dir;\n        var Fv = Math.cos(pheta) * v.mag;\n        var Fa = Math.sin(pheta) * v.mag;\n\n        var d1 = dir;\n        var d2 = dir + this.PI90;    \n        if(Fv < 0){\n            d1 += this.PI;\n            Fv = -Fv;\n        }\n\n        if(Fa < 0){\n            d2 += this.PI;\n            Fa = -Fa;\n        }\n        return {\n            along : this.polar(Fv,d1),\n            tangent : this.polar(Fa,d2)\n        };\n    }\n\n    doCollision(pointDetails, wallIndex) {\n        var vv = this.asPolar(pointDetails.velocity); \n        var va = this.asPolar(pointDetails.velocityA); \n        var vvc = this.vectorComponentsForDir(vv, this.WALL_NORMS[wallIndex]);\n        var vac = this.vectorComponentsForDir(va, this.WALL_NORMS[wallIndex]);\n\n        vvc.along.mag *= 1.18; \n        vac.along.mag *= 1.18; \n\n        vvc.along.mag *= this.mass;\n        vac.along.mag *= this.mass;\n\n        vvc.along.dir += this.PI;\n        vac.along.dir += this.PI;\n\n        vvc.tangent.mag *= 0.18;  \n        vac.tangent.mag *= 0.18;\n        vvc.tangent.mag *= this.mass  \n        vac.tangent.mag *= this.mass\n        vvc.tangent.dir += this.PI; \n        vac.tangent.dir += this.PI;\n\n        this.applyForce(vvc.along, pointDetails.pos)    \n        this.applyForce(vvc.tangent, pointDetails.pos)    \n        this.applyForce(vac.along, pointDetails.pos)    \n        this.applyForce(vac.tangent, pointDetails.pos)    \n    }\n}\n\nexport default Block","import Pig from \"./pig\";\nimport Block from \"./block\";\n\nclass StageLoader {\n    constructor( numberOfPigs = 2, pigsLocationArray = [[500, 600], [600, 600]], numberofBlocks = 2, blockLocationArray = [[350, 700], [700, 700]]) {\n        this.numberOfPigs = numberOfPigs;\n        this.pigsLocationArray = pigsLocationArray;\n        this.pigs = [];\n\n        this.numberofBlocks = numberofBlocks;\n        this.blockLocationArray = blockLocationArray;\n        this.blocks = [];\n    }\n\n    drawPigs(ctx) {\n        if (this.pigs.length === 0) {\n            for (let i = 0; i < this.pigsLocationArray.length; i++) {\n                this.pigs.push(new Pig(ctx, this.pigsLocationArray[i][0], this.pigsLocationArray[i][1]))\n            }\n        }\n    }\n\n    drawBlocks(ctx) {\n        if (this.blocks.length === 0){\n            for (let i = 0; i < this.blockLocationArray.length; i++) {\n                this.blocks.push(new Block(ctx, this.blockLocationArray[i][0], this.blockLocationArray[i][1]))\n            }\n        }\n    }\n\n    animate(ctx) {\n        this.drawPigs(ctx);\n        for (let i = 0; i < this.pigs.length; i++) {\n            this.pigs[i].animate(ctx);\n        }\n        \n        this.drawBlocks(ctx);\n        for (let i = 0; i < this.blocks.length; i++) {\n            this.blocks[i].animate(ctx);\n        }\n    }\n}\n\nexport default StageLoader;","import \"./styles/index.scss\";\nimport Canvas from \"./scripts/canvas\";\nimport Projectile from \"./scripts/projectile\";\nimport StageLoader from \"./scripts/stageLoader\";\n\nconst currentStateObj = {\n  currentExample: null,\n  currentEventListeners: [],\n};\n\ndocument.querySelector(\"#canvas\").addEventListener(\"click\", startCanvas);\n\nfunction startCanvas() {\n    unregisterEventListeners();\n    const canvas = new Canvas();\n    canvas.createCanvas();\n    const projectile = new Projectile(canvas.ctx)\n\n    \n\n    const stageLoader = new StageLoader()\n\n    let animating = true;\n\n    const animation = () => {\n        canvas.clearCanvas();\n        if (animating) {\n            let img = new Image();\n            img.src = \"src/images/pixil-layer-Background.png\";\n            canvas.ctx.drawImage(img,3,10);\n\n            stageLoader.animate(canvas.ctx)\n            projectile.animate(canvas.ctx, stageLoader.pigs, stageLoader.blocks)\n            document.querySelector(\"#launch-button\").addEventListener(\"click\", projectile.launch)\n            window.requestAnimationFrame(animation);\n        }\n    };\n\n    window.requestAnimationFrame(animation);\n\n    //   window.addEventListener(\"keydown\", handleKeyDown);\n    //   currentStateObj.currentEventListeners.push([\n    //     \"window\",\n    //     \"keydown\",\n    //     handleKeyDown,\n    //   ]);\n\n    //   window.addEventListener(\"mousedown\", handleMouseDown);\n    //   currentStateObj.currentEventListeners.push([\n    //     \"window\",\n    //     \"mousedown\",\n    //     handleMouseDown,\n    //   ]);\n\n    //   function handleKeyDown(event) {\n    //     if (event.which === 32) {\n    //       event.preventDefault();\n    //       squares.forEach((sq) => sq.reverseAnimation());\n    //       canvas.setColor(`#${Math.floor(Math.random() * 16777215).toString(16)}`);\n    //     }\n    //   }\n\n    //   function handleMouseDown(event) {\n    //     event.preventDefault();\n    //     squares.push(\n    //       new Square(\n    //         canvas.ctx,\n    //         canvas.coords.map((co) => co + 25),\n    //         canvas.fillColor\n    //       )\n    //     );\n        // animating = !animating;\n    //   }\n}\n\n\nfunction unregisterEventListeners() {\n  while (currentStateObj.currentEventListeners.length) {\n    let [\n      selector,\n      event,\n      handler,\n    ] = currentStateObj.currentEventListeners.pop();\n    if (selector === \"window\") {\n      window.removeEventListener(event, handler);\n      console.log(handler);\n    } else {\n      document.querySelector(selector).removeEventListener(event, handler);\n    }\n  }\n}\n\nfunction clearDemo() {\n  if (currentStateObj.currentExample === \"CANVASDEMO\")\n    document.body.removeChild(document.querySelector(\"canvas\"));\n  if (currentStateObj.currentExample === \"DOMDEMO\") {\n    [...document.querySelectorAll(\".card\")].forEach((elem) =>\n      document.body.removeChild(elem)\n    );\n  }\n}\n"],"sourceRoot":""}